{"version":3,"sources":["DataHandler.js","theTable.js","Search.js","NavBar.js","InfoImport.js","Map.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["Station","name","this","onLine","Set","Edge","from","to","distance","obj","preNode","postNode","adjList","hasOwnProperty","push","createRow","start","end","fee","line","getFee","DataHandler","StationController","allLine","lineInfo","txtArr","spliter","real_spliter","undefined","arguments","length","linesCounts","i","tempLine","split","lineStationCnts","parseInt","lineName","j","stationName","replace","nextStationName","add","createDoubleEdge","parseFloat","columns","id","label","minWidth","align","useStyles","makeStyles","root","width","zIndex","container","maxHeight","StickyHeadTable","props","rows","tableRows","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","Paper","className","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","style","TableBody","slice","row","hover","role","tabIndex","code","value","format","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","target","theme","searchIcon","height","Alert","elevation","variant","Search","setStart","setEnd","shortestPath","setPath","output","setOutput","setFee","checked","setCheck","setTableRows","showInfo","setShowInfo","searchHint","setHint","Grid","spacing","alignItems","item","open","TextField","onChange","e","IconButton","color","onClick","algorithmInfo","arrived","prev","dijList","Object","keys","station","Infinity","edge","toStation","min","selectNode","findTheShortest","indexOf","onWhichLine","each","toFixed","resPath","currentNode","reverse","Dijkstra","data","path","setShortPath","Backdrop","backdrop","display","flexDirection","alignContent","Container","fontSize","fontWeight","overflow","hint","hintInfo","severity","contentSelector","NavBar","getIndex","state","itemIdex","clickHandler","index","setState","setShowIndex","ListItem","button","ListItemIcon","ListItemText","primary","disabled","dataLoaded","Component","InfoStyles","marginTop","InfoImport","document","getElementById","click","txtFile","files","reader","FileReader","readAsText","onload","result","cutLine","setDataLoaded","forceUpdate","Button","txtSubmit","startIcon","Typography","type","hidden","fileSelectHandler","accept","console","log","renderStationList","Map","setOpen","loaded","setLoaded","endIcon","marker","subway","BMapSub","window","BMAPSUB_ANCHOR_BOTTOM_RIGHT","zoomBtn","hintClose","reason","createSubway","center","list","SubwayCitiesList","subwaycity","Subway","citycode","zoomControl","ZoomControl","anchor","offset","Size","addControl","setZoom","addEventListener","getLines","Icon","setCenter","markerTemp","Marker","icon","addMarker","useEffect","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Content","showIndex","thePath","Copyright","Link","href","Date","getFullYear","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","paddingTop","paddingBottom","paper","fixedHeight","App","CssBaseline","AppBar","clsx","Toolbar","noWrap","Drawer","Divider","List","maxWidth","Box","pt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.855a0b3b.chunk.js","sourcesContent":["/*\n    @18105226 陈宇卿\n    数据存储和处理类\n*/\n\n/*\n    存站点信息的类\n*/\nclass Station {\n    /*\n        @constructor\n        站点信息\n        @param\n        {string} name 站点名称\n        {Array{string}} onLine 在几号线上\n    */\n    constructor(name) {\n        this.name = name;\n        this.onLine = new Set();\n    }\n}\n\n/*\n    存边信息的类\n*/\nclass Edge {\n    /*\n        @constructor\n        构造边\n        @param\n        {string} from 前驱节点\n        {string} to 后驱节点\n        {number} distance 两个节点相隔距离\n    */\n    constructor(from, to, distance) {\n        this.from = from;\n        this.to = to;\n        this.distance = distance;\n    }\n\n    /*\n        @static function createDoubleEdge\n        真实调用的创建双向边的辅助方法\n        @param\n        {DataHandler} obj 用于直接修改对象的邻接表\n        {string} preNode 前驱节点\n        {string} postNode 后驱节点\n        {number} distance 相隔距离\n     */\n    static createDoubleEdge(obj, preNode, postNode, distance) {\n        if (obj.adjList.hasOwnProperty(preNode)) {\n            obj.adjList[preNode].push(new Edge(preNode, postNode, distance));\n        }\n        else {\n            obj.adjList[preNode] = [];\n            obj.adjList[preNode].push(new Edge(preNode, postNode, distance));\n        }\n\n        if (obj.adjList.hasOwnProperty(postNode)) {\n            obj.adjList[postNode].push(new Edge(postNode, preNode, distance));\n        }\n        else {\n            obj.adjList[postNode] = [];\n            obj.adjList[postNode].push(new Edge(postNode, preNode, distance));\n        }\n    }\n\n}\n\n/* 创建表格行内容 */\nfunction createRow(start, end, distance, fee, line) {\n    // line是在哪条线路上，可能有多个站点，所以是一个数组\n    return { start, end, distance, fee, line }\n}\n\n/* 计算地铁乘车费用 */\nfunction getFee(distance) {\n    if (distance < 6) return 3;\n    else if (distance < 12) return 4;\n    else if (distance < 22) return 5;\n    else if (distance < 32) return 6;\n    else if (distance < 52) return 7;\n    else if (distance < 72) return 8;\n    else return 9;\n}\n\n/*\n    Dijkstra 算法\n    @static function Dijkstra\n    求两点最短路径\n    @param\n    {string} start 始发站\n    {string} end 终点站\n    {Dict} adjList 邻接表\n    {Array{Array}} allLines 所有线路的信息\n    @return \n    {Array} res 长度为4的数组，0存最短距离，1存最短路径，2是费用, 3是表格的行信息\n*/\nfunction Dijkstra(start, end, adjList, allLine) {\n    if (!adjList.hasOwnProperty(start) || !adjList.hasOwnProperty(end)) return -1;\n    let arrived = [start];  /* 到达过的点 */\n    let rows = []   /* 未来表格需要渲染的内容 */\n\n    /* 路径规划，用于存放每个站点的前驱节点*/\n    let prev = {\n\n    };\n\n    /* 初始化可达信息 Station : distance */\n    let dijList = {\n\n    };\n\n    /* 初始化，可达距离最初为无限，所有的前驱节点都是undefined */\n    for (let station of Object.keys(adjList)) {\n        dijList[station] = Infinity;\n        prev[station] = undefined;\n    }\n\n    prev[start] = start;   /* 自己到自己是最短 */\n    dijList[start] = 0;    /* 自己到自己是0 */\n\n    /* 用start的邻接表初始化信息 */\n    for (let edge of adjList[start]) {\n        let toStation = edge.to;\n        dijList[toStation] = edge.distance;     /* 可达距离 */\n        prev[toStation] = start;                /* 更新前驱节点 */\n    }\n\n    /* 更新完所有站点再退出 */\n    while (1) {\n        let min = Infinity;\n        let selectNode = undefined; /* 这次循环将找到的最短节点 */\n\n        let findTheShortest = false;    /* 如果找不到最小节点，直接break */\n        /* 用in循环，对站点进行遍历 */\n        for (let key in dijList) {\n            /* 选出可达中最小且没有到达过的 */\n            if (arrived.indexOf(key) === -1 && dijList[key] < min) {\n                selectNode = key;\n                min = dijList[key];\n                findTheShortest = true;\n            }\n        }\n        if (!findTheShortest) break;\n\n        /* 更新距离信息 */\n        for (let edge of adjList[selectNode]) {\n            /* 如果距离和小于原本的距离 */\n            if (dijList[selectNode] + edge.distance < dijList[edge.to]) {\n                dijList[edge.to] = dijList[edge.from] + edge.distance;\n                prev[edge.to] = selectNode;\n            }\n        }\n        arrived.push(selectNode);\n        \n        let onWhichLine = [];\n        /* 判断这个站点在哪条线路上 */\n        for (let each of allLine) {\n            if (each.indexOf(selectNode) > 0) {\n                onWhichLine.push(each[1]);\n                onWhichLine.push(' ');\n            }\n        }\n\n        rows.push(createRow(start, selectNode, dijList[selectNode].toFixed(3), getFee(dijList[selectNode]), [...onWhichLine]));\n    }\n    // console.log(dijList);\n\n    /* 折腾路径 */\n    let resPath = [end];\n    let currentNode = prev[end];\n    while (currentNode !== start) {\n        resPath.push(currentNode);\n        currentNode = prev[currentNode];\n    }\n    resPath.push(start);\n\n    /* 计算费用 */\n    let shortestDis = dijList[end];\n    let fee = getFee(shortestDis);\n\n    return [dijList[end], resPath.reverse(), fee, rows];\n}\n\n\nclass DataHandler {\n\n    /*\n        @constructor\n        处理数据的类\n        @param\n        {Dict} StationController 存储所有站的信息，每个信息对应的是一个Station对象\n        {Array{string}} allLine 存所有线路的原始信息，注意名字没有去掉\\r\n        {Array{Array}} lineInfo 二位数组，0存线路名称，1存站点数\n        {Dict} adjList 地铁线路邻接表\n    */\n    constructor() {\n        this.StationController = {\n\n        };\n        this.allLine = [];\n        this.lineInfo = [];\n        this.adjList = {};\n    }\n\n    /*\n        @function cutLine\n        用于把地铁各站间的数据分开，提取对应站点、线路\n        @param\n        {Array} txtArr 读入后被分割的txt数组 注意要保留地铁线路数\n        {string} spliter 分割符，不填入默认为中文逗号\n    */\n    cutLine(txtArr, spliter) {\n        var real_spliter = undefined;\n        if (arguments.length < 2) real_spliter = \"，\";\n        else real_spliter = spliter;\n        var linesCounts = txtArr[0];\n        for (var i = 1; i <= linesCounts; i++) {\n            var tempLine = txtArr[i].split(real_spliter);\n            this.allLine.push(tempLine);                         /* 添加线路信息 */\n            var lineStationCnts = parseInt(tempLine[2]);         /* 地铁线路总站数 */\n            var lineName = tempLine[1];                          /* 地铁线路名称 {string} */\n            this.lineInfo.push([lineName, lineStationCnts]);     /* 线路信息，站点名称-站点数量 */\n            /* 对于每一条线，遍历每个站 */\n            for (var j = 3; j < tempLine.length; j += 2) {\n                // 名字必须要去掉 \\r 等回车换行符\n                var stationName = tempLine[j].replace(/[\\r\\n]/g, \"\");\n                var nextStationName = undefined;    /* 下一站的名称 */\n                if (j !== (tempLine.length - 1)) nextStationName = tempLine[j + 2].replace(/[\\r\\n]/g, \"\");    /* 如果不是最后一站，则建立和下一站的边 */\n\n                if (this.StationController.hasOwnProperty(stationName)) {           /* 已经遍历过的站 */\n                    this.StationController[stationName].onLine.add(lineName);\n                }\n                else {  /* 如果这是没有遍历过的点 */\n                    this.StationController[stationName] = new Station(stationName);\n                    this.StationController[stationName].onLine.add(lineName);\n                }\n\n                /* 建立邻接表 */\n                if (nextStationName) {\n                    Edge.createDoubleEdge(this, stationName, nextStationName, parseFloat(tempLine[j + 1]));\n                }\n\n            }\n        }\n    }\n\n};\n\n// eslint-disable-next-line\nvar quickSort = function (arr) {\n\n    if (arr.length <= 1) { return arr; }\n\n    var pivotIndex = Math.floor(arr.length / 2);\n\n    var pivot = arr.splice(pivotIndex, 1)[0];\n\n    var left = [];\n\n    var right = [];\n\n    for (var i = 0; i < arr.length; i++) {\n\n        if (arr[i] < pivot) {\n\n            left.push(arr[i]);\n\n        } else {\n\n            right.push(arr[i]);\n\n        }\n\n    }\n\n    return quickSort(left).concat([pivot], quickSort(right));\n\n};\n\nexport default DataHandler;\nexport { Station };\nexport { Dijkstra };","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n  { id: 'start', label: '始发站', minWidth: 200, align: 'left' },\n  { id: 'end', label: '终点站', minWidth: 200, align: 'left' },\n  {\n    id: 'distance',\n    label: '最短距离（KM）',\n    minWidth: 200,\n    align: 'left',\n  },\n  {\n    id: 'fee',\n    label: '费用（元）',\n    minWidth: 200,\n    align: 'left',\n  },\n  {\n    id: 'line',\n    label: '线路',\n    minWidth: 400,\n    align: 'left'\n  }\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '80%',\n    zIndex: 99\n  },\n  container: {\n    maxHeight: 1200,\n  },\n});\n\nexport default function StickyHeadTable(props) {\n  const rows = props.tableRows;\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","/*\n    @18105226 陈宇卿\n    输入起终点 费用表\n */\n\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport DirectionsSubwayIcon from '@material-ui/icons/DirectionsSubway';\nimport DirectionsRailwayIcon from '@material-ui/icons/DirectionsRailway';\nimport IconButton from '@material-ui/core/IconButton';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Dijkstra } from './DataHandler';\nimport { Container } from '@material-ui/core';\nimport StickyHeadTable from './theTable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    searchIcon: {\n        width: 50,\n        height: 50\n    }\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Search(props) {\n    const [start, setStart] = useState(undefined);\n    const [end, setEnd] = useState(undefined);\n    const [shortestPath, setPath] = useState(\"\");\n    const [output, setOutput] = useState(\"\");\n    const [fee, setFee] = useState(0);\n    const [checked, setCheck] = useState(false);\n    const [tableRows, setTableRows] = useState([]);\n    const [showInfo, setShowInfo] = useState(false);\n    /* 查询提示 */\n    const [searchHint, setHint] = useState(0);\n\n    const classes = useStyles();\n\n    const contentSelector = (hint) => {\n        let hintInfo;\n        switch (hint) {\n            case 0:\n                hintInfo = (\n                    <Alert severity=\"info\">请点击左侧按钮查询，右侧按钮查看详情。</Alert>\n                );\n                break;\n            case 1:\n                hintInfo = (\n                    <Alert severity=\"success\">查询成功！</Alert>\n                );\n                break;\n            case 2:\n                hintInfo = (\n                    <Alert severity=\"error\">查询不到对应站点！</Alert>\n                );\n                break;\n            default:\n                hintInfo = null;\n                break;\n        }\n\n        return (\n            props.open &&\n            hintInfo\n        );\n    }\n\n    const Info = () => {\n        if (!checked) {\n            return (\n                <Backdrop className={classes.backdrop} open={showInfo} onClick={() => { setShowInfo(false) }}>\n                    <h1 style={{ color: 'White', fontSize: '100px', fontWeight: 'Bold' }}>\n                        请先查询。\n                    </h1>\n                </Backdrop>\n            );\n        }\n        return (\n            <Backdrop className={classes.backdrop} open={showInfo} >\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignContent: 'center',\n                    alignItems: 'center'\n                }}>\n                    <IconButton aria-label=\"close\" color=\"action\" onClick={() => { setShowInfo(false) }}>\n                        <CloseIcon style={{width: 80, height: 80, color: 'white'}} />\n                    </IconButton>\n                    <Container spacing={10} style={{ color: 'White', fontSize: '20px', fontWeight: 'Bold' }} >\n                        {output}\n                    </Container>\n\n                    <Container style={{ color: 'White', fontSize: '18px', fontWeight: 'Bold', overflow: 'auto' }} >\n                        最短路径为 {shortestPath}\n                    </Container>\n\n                    <Container spacing={10} style={{ color: 'White', fontSize: '20px', fontWeight: 'Bold' }} >\n                        本线路地铁费用为 {fee} 元\n                    </Container>\n\n                    <StickyHeadTable tableRows={tableRows}>\n                    </StickyHeadTable>\n                </div>\n            </Backdrop>\n        );\n    }\n\n    const clickHandler = () => {\n        setCheck(true);\n        let algorithmInfo = Dijkstra(start, end, props.data.adjList, props.data.allLine);\n        if (algorithmInfo === -1) {      /* 输入有误 */\n            setOutput(\"没有查询到对应站点\");\n            setHint(2);\n        }\n        else {\n            let distance = algorithmInfo[0];\n            /* 把路径变成字符串 */\n            let path = \"\";\n            for (let i = 0; i < algorithmInfo[1].length; i++) {\n                path += algorithmInfo[1][i];\n                if (i < algorithmInfo[1].length - 1) {\n                    path += \" -> \";\n                }\n            }\n            let output = start + \"到\" + end + \"的距离为\" + distance.toFixed(3) + \"KM\";\n            setOutput(output);\n            setPath(path);\n            props.setShortPath(algorithmInfo[1]);\n            setFee(algorithmInfo[2]);\n            setTableRows(algorithmInfo[3]);\n            // console.log(algorithmInfo[3]);\n            setHint(1);\n        }\n    }\n\n    const clickInfo = () => {\n        setShowInfo(true);\n    }\n\n    return (\n        <div>\n            <Grid container spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                    <DirectionsSubwayIcon />\n                </Grid>\n                {\n                    props.open &&\n                    <Grid item>\n                        <TextField id=\"start\" label=\"始发站\" onChange={(e) => {\n                            setStart(e.target.value);\n                        }} />\n                    </Grid>\n                }\n            </Grid>\n\n            <Grid container spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                    <DirectionsRailwayIcon />\n                </Grid>\n                {\n                    props.open &&\n                    <Grid item>\n                        <TextField id=\"end\" label=\"终点站\" onChange={(e) => {\n                            setEnd(e.target.value);\n                        }} />\n                    </Grid>\n                }\n            </Grid>\n\n            {\n                props.open && (\n                    <span>\n                        <IconButton aria-label=\"go\" color=\"primary\" onClick={clickHandler}>\n                            <DirectionsIcon className={classes.searchIcon} />\n                        </IconButton>\n                        <IconButton aria-label=\"info\" color=\"secondary\" onClick={clickInfo}>\n                            <InfoIcon className={classes.searchIcon} />\n                        </IconButton>\n                    </span>\n                )\n            }\n\n            {Info()}\n            {contentSelector(searchHint)}\n        </div>\n    );\n}\n","\n/*\n    @18105226 陈宇卿\n    主页导航栏渲染\n    根据不同的状态来确定渲染的内容\n*/\n\nimport React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PeopleIcon from '@material-ui/icons/People';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport Search from './Search';\n\nclass NavBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // itemIdex 代表不同标签页\n        this.state = {\n            itemIdex: 0\n        };\n    }\n\n    getIndex = () => {\n        return this.state.itemIdex;\n    }\n\n    /* 处理点击，改变状态以显示不同内容 */\n    clickHandler = (index) => {\n        this.setState({ itemIdex: index });\n        // 改变父组件的index值\n        this.props.setShowIndex(index);\n    }\n\n    render() {\n        return (\n            <div>\n                <ListItem\n                    button\n                    onClick={() => this.clickHandler(0)}\n                >\n                    <ListItemIcon>\n                        <LayersIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"地铁信息导入\" />\n                </ListItem>\n                <ListItem\n                    button\n                    onClick={() => this.clickHandler(2)}\n                    disabled={!this.props.dataLoaded}\n                >\n                    <ListItemIcon>\n                        <PeopleIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"交互查询界面\" />\n                </ListItem>\n\n                {\n                    this.props.dataLoaded &&\n                    this.state.itemIdex !== 0 &&\n                    <ListItem>\n                        <Search\n                            data={this.props.data}\n                            open={this.props.open}\n                            setShortPath={this.props.setShortPath}\n                        >\n\n                        </Search>\n                    </ListItem>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default NavBar;\n\n\n\n\n","/*\n    @18105226 陈宇卿\n    导入数据页面\n*/\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { ListItem } from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nconst InfoStyles = {\n    marginTop : 50,\n}\n\n\n/* 导入数据的按钮 */\nclass InfoImport extends React.Component {\n\n    /*\n        @param\n        {StationController} data 存储所有站的信息\n        {Array} txtArr 按照\\n分割为数组的txtStr         \n    */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data : props.data,\n            txtArr : []\n        };\n    }\n\n    // 触发表单提交\n    txtSubmit() {\n        document.getElementById(\"selectTXT\").click();\n    }\n\n\n    /* \n        @function fileSelectHandler\n        因为在内部函数会丢失this\n        将组件的this传进去，obj为该组件的this\n        @param \n        {object} obj this指针\n    */\n    fileSelectHandler(obj) {\n        const txtFile = document.getElementById(\"selectTXT\").files[0];\n        const reader = new FileReader();\n        reader.readAsText(txtFile);\n        /* \n            readAsText 触发load事件\n            onload 对时间event进行处理\n        */\n        reader.onload = (event) => {\n            obj.setState({\n                txtArr : event.target.result.split(\"\\n\"),\n            },\n                () => {\n                    obj.state.data.cutLine(event.target.result.split(\"\\n\"));\n                }\n            );\n            this.props.setDataLoaded(true);\n            obj.forceUpdate();  /* 强制重新渲染 */\n        };\n    }\n\n    renderStationList(lineInfo) {\n        if (!lineInfo) return \"没有查询到地铁信息\";\n        else {\n            let showListItems = undefined;\n            showListItems = lineInfo.map(line => {\n                return (<ListItem key={line[0]} value={line[1]}>{line[0]} 一共有 {line[1]} 站\n                </ListItem>);\n            });\n            return showListItems;\n        }\n    }\n\n    render() {\n        return (\n            \n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.txtSubmit} startIcon={<CloudUploadIcon />}>\n                    导入地铁数据\n                </Button>\n\n                <Typography style={InfoStyles}>\n                    {'线路数量 : ' + this.state.data.allLine.length}\n                </Typography>\n\n                 {/* input是实际提交的表单，Button只是用于触发 */}\n                 <input id=\"selectTXT\" type=\"file\" hidden onChange={() => this.fileSelectHandler(this)} accept=\".txt\" />\n\n                <ul>\n                    {console.log(this.state.data)}\n                    {this.renderStationList(this.state.data.lineInfo)}\n                </ul>\n        \n            </div>\n        );\n    }\n\n}\n\nexport default InfoImport;\n\n","/*\n    @18105226 陈宇卿\n    地图展示类\n */\n\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Map(props) {\n    const [open, setOpen] = React.useState(false);\n    const [loaded, setLoaded] = React.useState(false);\n\n    let startIcon = null;\n    let endIcon = null;\n    let marker = null;\n    let subway = null;\n    let BMapSub = window.BMapSub;\n    let BMAPSUB_ANCHOR_BOTTOM_RIGHT = window.zoomBtn;\n\n    const hintClose = (event, reason) => {\n        setOpen(false);\n        setLoaded(true);\n    }\n\n    const loadHint = () => {\n        if (!loaded) {\n            return (\n                <div>\n                    <Snackbar open={open} autoHideDuration={6000} onClose={hintClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                        <Alert onClose={hintClose} severity=\"warning\">\n                            暂时不支持西郊线、16号线、S1线、燕房线、新机场线。\n                        </Alert>\n                    </Snackbar>\n                </div>\n\n            );\n        }\n        else return null;\n    }\n\n    const createSubway = (center) => {\n        let subwayCityName = '北京';\n        let list = BMapSub.SubwayCitiesList;\n        let subwaycity = null;\n        for (var i = 0; i < list.length; i++) {\n            if (list[i].name === subwayCityName) {\n                subwaycity = list[i];\n                break;\n            }\n        }\n        subway = new BMapSub.Subway('map', subwaycity.citycode);\n        // zoom controller\n        let zoomControl = new BMapSub.ZoomControl({\n            anchor: BMAPSUB_ANCHOR_BOTTOM_RIGHT,\n            offset: new BMapSub.Size(10, 100)\n        });\n\n        subway.addControl(zoomControl);\n        subway.setZoom(1);\n\n        // 提示线路信息\n        subway.addEventListener('subwayloaded', function () {\n            setOpen(true);\n            subway.getLines();\n        });\n\n        // 站点点击事件\n        subway.addEventListener('tap', (e) => {\n\n        });\n\n        startIcon = new BMapSub.Icon(\n            'https://api.map.baidu.com/images/subway/start-bak.png',\n            new BMapSub.Size(50, 80)\n        );\n\n        endIcon = new BMapSub.Icon(\n            'https://api.map.baidu.com/images/subway/end-bak.png',\n            new BMapSub.Size(50, 80)\n        );\n\n        marker = new BMapSub.Icon(\n            'https://api.map.baidu.com/images/subway/marker.png',\n            new BMapSub.Size(50, 80)\n        );\n\n        subway.setCenter(center);\n\n        if (props.path.length > 0) {\n            for (let i = 0; i < props.path.length; i++) {\n                if (i === 0) {\n                    let markerTemp = new BMapSub.Marker(props.path[i], { icon: startIcon });\n                    subway.addMarker(markerTemp);\n                }\n                else if (i === props.path.length - 1) {\n                    let markerTemp = new BMapSub.Marker(props.path[i], { icon: endIcon });\n                    subway.addMarker(markerTemp);\n                }\n                else {\n                    let markerTemp = new BMapSub.Marker(props.path[i], { icon: marker });\n                    subway.addMarker(markerTemp);\n                }\n            }\n        }\n    }\n\n    const mark = () => {\n        createSubway(props.path[0]);\n    }\n\n    // useEffect is componentDidMount in function \n    React.useEffect(() => {\n        if (!loaded)\n            createSubway('天安门东');\n    });\n\n    return (\n        <div>\n            {props.path.length > 0 && mark()}\n            {loadHint()}\n            <div id=\"map\" style={{ height: \"80vh\" }}>\n            </div>\n        </div>\n    );\n}\n","/*\n    @18105226 陈宇卿\n    中间页的主要渲染内容，作为中间组件，信息传递\n    等级和 NavBar 并行\n*/\n\nimport React from 'react';\nimport InfoImport from './InfoImport';\nimport Map from './Map';\n\nclass Content extends React.Component {\n\n    render() {\n        if (this.props.showIndex === 0) {\n            return (\n                <InfoImport \n                    data = {this.props.data}\n                    setDataLoaded = {this.props.setDataLoaded}\n                />\n            );\n        }\n        else {\n            return (\n                <Map \n                    data = {this.props.data}\n                    path = {this.props.thePath}\n                />\n            );\n        }\n    }\n}\n\nexport default Content;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport NavBar from './NavBar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Content from './Content';\nimport DataHandler from './DataHandler';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/scyq\">\n        18105226 陈宇卿 数据结构课设\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 360;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  /* 实现抽屉效果的方法 */\n  const [open, setOpen] = React.useState(true);\n\n  /* 记录、保存数据的类，保证不会被回收 */\n  const [data] = React.useState(new DataHandler());\n\n  /* 数据是否加载完成 */\n  const [dataLoaded, setDataLoaded] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // 当前现实的页面\n  const [showIndex, setShowIndex] = React.useState(0);\n\n  /* 最短路径 */\n  const [thePath, setShortPath] = React.useState([]);\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            北京地铁费用查询系统\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      \n      {/* Drawer 用于实现抽屉折叠效果 */}\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n          <List> \n            <NavBar \n              setShowIndex = {setShowIndex}\n              dataLoaded = {dataLoaded}\n              data = {data}\n              open={open}\n              setShortPath={setShortPath}\n            />\n          </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n\n          {/* 主要内容显示在Conten中，利用传入的showIndex来表示渲染哪个选项卡 */}\n          <Content \n            showIndex = {showIndex}\n            data = {data}\n            setDataLoaded = {setDataLoaded}\n            thePath={thePath}\n          />\n\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}